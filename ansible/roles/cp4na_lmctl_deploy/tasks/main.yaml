---
- name: Check if the "{{ file_dest_dir }}" directory exists and create it if it doesn't exist
  ansible.builtin.file:
    path: "{{ file_dest_dir }}"
    state: directory
    mode: '0755'

- name: Install LMCTL Python module for IBM CP4NA
  ansible.builtin.pip:
    name: lmctl
    state: present

- name: Extract the default IBM CP4NA GUI "admin" user's password, CP4NA orchestration GUI link and Ishtar link
  ansible.builtin.shell: "{{ item }}"
  register: cmd_outputs
  with_items:
    - oc get secret platform-auth-idp-credentials -n ibm-common-services -o='jsonpath={.data.admin_password}' | base64 -d
    - oc get route cp4na-o-ishtar -n '{{ cp4na_ns }}' -o jsonpath='{.spec.host}'
    - oc get orchestration tnco -o 'jsonpath={..status.uiendpoints.orchestration}' -n '{{ cp4na_ns }}'

- name: Create LMCTL config file from template
  template:
    src: lmctl.yaml.j2
    dest: "{{ file_dest_dir }}/lmctl.yaml"

- name: check for a previous deployment of ansible driver
  kubernetes.core.k8s_info:
    kind: Deployment
    name: "ansible-lifecycle-driver"
    namespace: "{{ cp4na_ns }}"
  register: deployment_status

- name: output register
  ansible.builtin.debug:
    var: deployment_status

- name: Set the default namespace as the IBM CP4NA namespace and onboard the ansible lifecycle driver into CP4NA
  ansible.builtin.shell: "{{ item }}"
  with_items:
    - oc project '{{ cp4na_ns }}'
    - lmctl resourcedriver add --type ansible --url https://ansible-lifecycle-driver:'{{ cp4na_ansible_driver_port }}' dev --certificate '{{ file_dest_dir }}'/ald-tls.pem
  environment:
    LMCONFIG: "{{ file_dest_dir }}/lmctl.yaml"
  when: deployment_status.resources == []


- name: Check if the "{{ cp4na_repo_dest }}" directory exists and create it if it doesn't exist
  ansible.builtin.file:
    path: "{{ cp4na_repo_dest }}"
    state: directory
    mode: '0755'

- name: Upload/push the CP4NA automation assembly descriptors into the CP4NA SitePlanner
  ansible.builtin.shell: "lmctl project push dev"
  args:
    chdir: "{{ item }}"
  with_items:
    - "{{ cp4na_repo_dest }}/nodeconfig-master"
    - "{{ cp4na_repo_dest }}/ocp-cluster-automation-develop"
    - "{{ cp4na_repo_dest }}/prereqs-datamodel-master"
    - "{{ cp4na_repo_dest }}/server-automation-master"
  environment:
    LMCONFIG: "{{ file_dest_dir }}/lmctl.yaml"
  when: deployment_status.resources == []
